/*! tailwindcss v4.1.14 | MIT License | https://tailwindcss.com */
@layer properties {
  @supports (((-webkit-hyphens: none)) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {
    *, :before, :after, ::backdrop {
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-border-style: solid;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-ordinal: initial;
      --tw-slashed-zero: initial;
      --tw-numeric-figure: initial;
      --tw-numeric-spacing: initial;
      --tw-numeric-fraction: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-duration: initial;
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
    }
  }
}

@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
    --color-red-500: oklch(63.7% .237 25.331);
    --color-orange-500: oklch(70.5% .213 47.604);
    --color-green-700: oklch(52.7% .154 150.069);
    --color-purple-700: oklch(49.6% .265 301.924);
    --color-fuchsia-500: oklch(66.7% .295 322.15);
    --color-gray-800: oklch(27.8% .033 256.848);
    --color-white: #fff;
    --spacing: .25rem;
    --container-xs: 20rem;
    --text-xs: .75rem;
    --text-xs--line-height: calc(1 / .75);
    --text-sm: .875rem;
    --text-sm--line-height: calc(1.25 / .875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-6xl: 3.75rem;
    --text-6xl--line-height: 1;
    --text-7xl: 4.5rem;
    --text-7xl--line-height: 1;
    --text-8xl: 6rem;
    --text-8xl--line-height: 1;
    --font-weight-normal: 400;
    --font-weight-bold: 700;
    --radius-xs: .125rem;
    --radius-sm: .25rem;
    --default-transition-duration: .15s;
    --default-transition-timing-function: cubic-bezier(.4, 0, .2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --color-forgebrown-100: #ffeed5;
    --color-forgebrown-800: #6c4100;
    --color-forgegray-50: #f7f8fa;
    --color-forgegray-100: #edf1f3;
    --color-forgegray-200: #dce2e8;
    --color-forgegray-300: #c4cfd7;
    --color-forgegray-400: #9fb1bf;
    --color-forgegray-700: #4c6172;
    --color-forgegray-800: #3c4d5a;
    --color-forgegray-900: #323f4a;
    --color-forgeblue-50: #f2f9ff;
    --color-forgeblue-100: #e4f2ff;
    --color-forgeblue-200: #c9e5ff;
    --color-forgeblue-300: #a3d2ff;
    --color-forgeblue-400: #64b4ff;
    --color-forgeblue-500: #2093ff;
    --color-forgeblue-600: #0074e1;
    --color-forgeblue-700: #005db5;
    --color-forgeblue-800: #004a90;
    --color-forgeblue-950: #002345;
    --animate-background-slide-left: background-slide-left;
    --animate-background-slide-right: background-slide-right;
  }
}

@layer base {
  *, :after, :before, ::backdrop {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }

  ::file-selector-button {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }

  html, :host {
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    line-height: 1.5;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }

  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }

  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }

  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }

  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    -webkit-text-decoration: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }

  b, strong {
    font-weight: bolder;
  }

  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }

  small {
    font-size: 80%;
  }

  sub, sup {
    vertical-align: baseline;
    font-size: 75%;
    line-height: 0;
    position: relative;
  }

  sub {
    bottom: -.25em;
  }

  sup {
    top: -.5em;
  }

  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }

  :-moz-focusring {
    outline: auto;
  }

  progress {
    vertical-align: baseline;
  }

  summary {
    display: list-item;
  }

  ol, ul, menu {
    list-style: none;
  }

  img, svg, video, canvas, audio, iframe, embed, object {
    vertical-align: middle;
    display: block;
  }

  img, video {
    max-width: 100%;
    height: auto;
  }

  button, input, select, optgroup, textarea {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }

  ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }

  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }

  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }

  ::file-selector-button {
    margin-inline-end: 4px;
  }

  ::placeholder {
    opacity: 1;
  }

  @supports (not ((-webkit-appearance: -apple-pay-button))) or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentColor;
    }

    @supports (color: color-mix(in lab, red, red)) {
      ::placeholder {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }

  textarea {
    resize: vertical;
  }

  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }

  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }

  ::-webkit-datetime-edit {
    display: inline-flex;
  }

  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }

  ::-webkit-datetime-edit {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-year-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-month-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-day-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-hour-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-minute-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-second-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-millisecond-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }

  ::-webkit-calendar-picker-indicator {
    line-height: 1;
  }

  :-moz-ui-invalid {
    box-shadow: none;
  }

  button, input:where([type="button"], [type="reset"], [type="submit"]) {
    appearance: button;
  }

  ::file-selector-button {
    appearance: button;
  }

  ::-webkit-inner-spin-button {
    height: auto;
  }

  ::-webkit-outer-spin-button {
    height: auto;
  }

  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}

@layer components;

@layer utilities {
  .pointer-events-auto {
    pointer-events: auto;
  }

  .pointer-events-none {
    pointer-events: none;
  }

  .visible {
    visibility: visible;
  }

  .scrollable {
    top: calc(var(--spacing) * 0);
    right: calc(var(--spacing) * 0);
    bottom: calc(var(--spacing) * 0);
    left: calc(var(--spacing) * 0);
    position: absolute;
    overflow: auto;
  }

  .relscrollable-100 {
    max-height: calc(---value(integer) * var(--spacing));
    position: relative;
  }

  .absolute {
    position: absolute;
  }

  .relative, .scrollbox {
    position: relative;
  }

  .static {
    position: static;
  }

  .inset-y-16\/100 {
    inset-block: 16%;
  }

  .start-2\.5 {
    inset-inline-start: calc(var(--spacing) * 2.5);
  }

  .top-3\.5 {
    top: calc(var(--spacing) * 3.5);
  }

  .top-8 {
    top: calc(var(--spacing) * 8);
  }

  .right-1\.5 {
    right: calc(var(--spacing) * 1.5);
  }

  .-z-10 {
    z-index: calc(10 * -1);
  }

  .container {
    width: 100%;
  }

  @media (min-width: 40rem) {
    .container {
      max-width: 40rem;
    }
  }

  @media (min-width: 48rem) {
    .container {
      max-width: 48rem;
    }
  }

  @media (min-width: 64rem) {
    .container {
      max-width: 64rem;
    }
  }

  @media (min-width: 80rem) {
    .container {
      max-width: 80rem;
    }
  }

  @media (min-width: 96rem) {
    .container {
      max-width: 96rem;
    }
  }

  .m-4 {
    margin: calc(var(--spacing) * 4);
  }

  .mx-2 {
    margin-inline: calc(var(--spacing) * 2);
  }

  .mx-\[4px\] {
    margin-inline: 4px;
  }

  .my-2 {
    margin-block: calc(var(--spacing) * 2);
  }

  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }

  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }

  .mt-\[calc\(var\(--spacing\)\*6\.7\)\] {
    margin-top: calc(var(--spacing) * 6.7);
  }

  .ml-1 {
    margin-left: calc(var(--spacing) * 1);
  }

  .ml-6 {
    margin-left: calc(var(--spacing) * 6);
  }

  .block {
    display: block;
  }

  .flex {
    display: flex;
  }

  .hidden {
    display: none;
  }

  .inline {
    display: inline;
  }

  .inline-block {
    display: inline-block;
  }

  .table {
    display: table;
  }

  .size-\[28px\] {
    width: 28px;
    height: 28px;
  }

  .h-5\.5 {
    height: calc(var(--spacing) * 5.5);
  }

  .h-12 {
    height: calc(var(--spacing) * 12);
  }

  .h-\[32px\] {
    height: 32px;
  }

  .h-dvh {
    height: 100dvh;
  }

  .h-full {
    height: 100%;
  }

  .h-max {
    height: max-content;
  }

  .min-h-25 {
    min-height: calc(var(--spacing) * 25);
  }

  .min-h-30 {
    min-height: calc(var(--spacing) * 30);
  }

  .min-h-80 {
    min-height: calc(var(--spacing) * 80);
  }

  .w-5\.5 {
    width: calc(var(--spacing) * 5.5);
  }

  .w-61 {
    width: calc(var(--spacing) * 61);
  }

  .w-96 {
    width: calc(var(--spacing) * 96);
  }

  .w-\[66px\] {
    width: 66px;
  }

  .w-dvw {
    width: 100dvw;
  }

  .w-full {
    width: 100%;
  }

  .w-xs {
    width: var(--container-xs);
  }

  .min-w-xs {
    min-width: var(--container-xs);
  }

  .flex-1 {
    flex: 1;
  }

  .flex-none {
    flex: none;
  }

  .shrink-0 {
    flex-shrink: 0;
  }

  .grow, .grow-1 {
    flex-grow: 1;
  }

  .basis-1\/3 {
    flex-basis: 33.3333%;
  }

  .basis-2\/3 {
    flex-basis: 66.6667%;
  }

  .basis-auto {
    flex-basis: auto;
  }

  .origin-\[0\] {
    transform-origin: 0;
  }

  .transform {
    transform: var(--tw-rotate-x, ) var(--tw-rotate-y, ) var(--tw-rotate-z, ) var(--tw-skew-x, ) var(--tw-skew-y, );
  }

  .animate-background-slide-left {
    animation: var(--animate-background-slide-left);
  }

  .animate-background-slide-right {
    animation: var(--animate-background-slide-right);
  }

  .cursor-pointer {
    cursor: pointer;
  }

  .list-none {
    list-style-type: none;
  }

  .appearance-none {
    appearance: none;
  }

  .flex-col {
    flex-direction: column;
  }

  .flex-row {
    flex-direction: row;
  }

  .items-center {
    align-items: center;
  }

  .justify-center {
    justify-content: center;
  }

  .justify-items-start {
    justify-items: start;
  }

  :where(.divide-solid > :not(:last-child)) {
    --tw-border-style: solid;
    border-style: solid;
  }

  .overflow-auto {
    overflow: auto;
  }

  .overflow-hidden {
    overflow: hidden;
  }

  .rounded-full {
    border-radius: 3.40282e38px;
  }

  .rounded-sm {
    border-radius: var(--radius-sm);
  }

  .border, .border-1 {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }

  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }

  .border-y {
    border-block-style: var(--tw-border-style);
    border-block-width: 1px;
  }

  .border-l-0\! {
    border-left-style: var(--tw-border-style) !important;
    border-left-width: 0 !important;
  }

  .border-l-3 {
    border-left-style: var(--tw-border-style);
    border-left-width: 3px;
  }

  .border-solid {
    --tw-border-style: solid;
    border-style: solid;
  }

  .border-forgeblue-300 {
    border-color: var(--color-forgeblue-300);
  }

  .border-forgeblue-500 {
    border-color: var(--color-forgeblue-500);
  }

  .border-forgeblue-800 {
    border-color: var(--color-forgeblue-800);
  }

  .border-forgegray-300 {
    border-color: var(--color-forgegray-300);
  }

  .border-forgegray-400 {
    border-color: var(--color-forgegray-400);
  }

  .border-fuchsia-500 {
    border-color: var(--color-fuchsia-500);
  }

  .border-gray-800 {
    border-color: var(--color-gray-800);
  }

  .border-red-500 {
    border-color: var(--color-red-500);
  }

  .border-transparent {
    border-color: #0000;
  }

  .border-l-forgegray-50 {
    border-left-color: var(--color-forgegray-50);
  }

  .border-l-forgegray-800 {
    border-left-color: var(--color-forgegray-800);
  }

  .bg-forgeblue-200 {
    background-color: var(--color-forgeblue-200);
  }

  .bg-forgeblue-300 {
    background-color: var(--color-forgeblue-300);
  }

  .bg-forgeblue-800 {
    background-color: var(--color-forgeblue-800);
  }

  .bg-forgeblue-950 {
    background-color: var(--color-forgeblue-950);
  }

  .bg-forgebrown-100 {
    background-color: var(--color-forgebrown-100);
  }

  .bg-forgegray-50 {
    background-color: var(--color-forgegray-50);
  }

  .bg-forgegray-100 {
    background-color: var(--color-forgegray-100);
  }

  .bg-forgegray-300 {
    background-color: var(--color-forgegray-300);
  }

  .bg-linear-\[90deg\,var\(--color-forgegray-800\)_0\%\,var\(--color-forgegray-800\)_25\%\,var\(--color-forgeblue-500\)_75\%\,var\(--color-forgeblue-500\)_100\%\] {
    --tw-gradient-position: 90deg, var(--color-forgegray-800) 0%, var(--color-forgegray-800) 25%, var(--color-forgeblue-500) 75%, var(--color-forgeblue-500) 100%;
    background-image: linear-gradient(var(--tw-gradient-stops, 90deg, var(--color-forgegray-800) 0%, var(--color-forgegray-800) 25%, var(--color-forgeblue-500) 75%, var(--color-forgeblue-500) 100%));
  }

  .bg-\[length\:400\%_100\%\] {
    background-size: 400% 100%;
  }

  .bg-left {
    background-position: 0;
  }

  .bg-right {
    background-position: 100%;
  }

  .p-2 {
    padding: calc(var(--spacing) * 2);
  }

  .p-4 {
    padding: calc(var(--spacing) * 4);
  }

  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }

  .px-2\.5 {
    padding-inline: calc(var(--spacing) * 2.5);
  }

  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }

  .py-0 {
    padding-block: calc(var(--spacing) * 0);
  }

  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }

  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }

  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }

  .pt-4 {
    padding-top: calc(var(--spacing) * 4);
  }

  .pt-8 {
    padding-top: calc(var(--spacing) * 8);
  }

  .pb-2 {
    padding-bottom: calc(var(--spacing) * 2);
  }

  .pl-2\.5 {
    padding-left: calc(var(--spacing) * 2.5);
  }

  .pl-6 {
    padding-left: calc(var(--spacing) * 6);
  }

  .pl-9 {
    padding-left: calc(var(--spacing) * 9);
  }

  .pl-12 {
    padding-left: calc(var(--spacing) * 12);
  }

  .pl-15 {
    padding-left: calc(var(--spacing) * 15);
  }

  .pl-18 {
    padding-left: calc(var(--spacing) * 18);
  }

  .pl-21 {
    padding-left: calc(var(--spacing) * 21);
  }

  .pl-24 {
    padding-left: calc(var(--spacing) * 24);
  }

  .pl-27 {
    padding-left: calc(var(--spacing) * 27);
  }

  .text-left {
    text-align: left;
  }

  .font-mono {
    font-family: var(--font-mono);
  }

  .forge-text-small {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }

  .forge-text-standard {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }

  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }

  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }

  .leading-0 {
    --tw-leading: calc(var(--spacing) * 0);
    line-height: calc(var(--spacing) * 0);
  }

  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }

  .text-forgeblue-100 {
    color: var(--color-forgeblue-100);
  }

  .text-forgegray-50 {
    color: var(--color-forgegray-50);
  }

  .text-forgegray-200 {
    color: var(--color-forgegray-200);
  }

  .text-forgegray-400 {
    color: var(--color-forgegray-400);
  }

  .text-forgegray-700 {
    color: var(--color-forgegray-700);
  }

  .text-forgegray-800 {
    color: var(--color-forgegray-800);
  }

  .text-forgegray-900 {
    color: var(--color-forgegray-900);
  }

  .ordinal {
    --tw-ordinal: ordinal;
    font-variant-numeric: var(--tw-ordinal, ) var(--tw-slashed-zero, ) var(--tw-numeric-figure, ) var(--tw-numeric-spacing, ) var(--tw-numeric-fraction, );
  }

  .shadow-lg\/20 {
    --tw-shadow-alpha: 20%;
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, oklab(0% 0 0 / .2)), 0 4px 6px -4px var(--tw-shadow-color, oklab(0% 0 0 / .2));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .duration-300 {
    --tw-duration: .3s;
    transition-duration: .3s;
  }

  .forge-animate-300 {
    animation-duration: .3s;
    animation-direction: normal;
  }

  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }

  .select-none {
    -webkit-user-select: none;
    user-select: none;
  }

  .forge-animate-keep-both {
    animation-fill-mode: both;
  }

  .peer-checked\:bg-forgeblue-300:is(:where(.peer):checked ~ *) {
    background-color: var(--color-forgeblue-300);
  }

  .peer-placeholder-shown\:translate-y-12\/10:is(:where(.peer):placeholder-shown ~ *) {
    --tw-translate-y: calc(12 / 10 * 100%);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .peer-placeholder-shown\:cursor-text:is(:where(.peer):placeholder-shown ~ *) {
    cursor: text;
  }

  .peer-placeholder-shown\:forge-text-standard:is(:where(.peer):placeholder-shown ~ *) {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }

  .peer-placeholder-shown\:text-forgegray-700:is(:where(.peer):placeholder-shown ~ *) {
    color: var(--color-forgegray-700);
  }

  .peer-focus\:translate-y-0:is(:where(.peer):focus ~ *) {
    --tw-translate-y: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .peer-focus\:forge-text-small:is(:where(.peer):focus ~ *) {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }

  .peer-focus\:text-forgegray-700:is(:where(.peer):focus ~ *) {
    color: var(--color-forgegray-700);
  }

  .first\:basis-1\/1:first-child {
    flex-basis: 100%;
  }

  @media (hover: hover) {
    .hover\:bg-forgeblue-200:hover {
      background-color: var(--color-forgeblue-200);
    }

    .hover\:bg-forgeblue-400:hover {
      background-color: var(--color-forgeblue-400);
    }

    .hover\:bg-forgeblue-700:hover {
      background-color: var(--color-forgeblue-700);
    }

    .hover\:bg-forgeblue-800:hover {
      background-color: var(--color-forgeblue-800);
    }

    .hover\:bg-forgegray-200:hover {
      background-color: var(--color-forgegray-200);
    }

    .hover\:text-forgeblue-100:hover {
      color: var(--color-forgeblue-100);
    }

    .hover\:text-forgeblue-300:hover {
      color: var(--color-forgeblue-300);
    }
  }

  .focus\:border-2:focus {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }

  .focus\:border-forgeblue-500:focus {
    border-color: var(--color-forgeblue-500);
  }

  .focus\:ring-forgeblue-500:focus {
    --tw-ring-color: var(--color-forgeblue-500);
  }

  .focus\:outline-none:focus {
    --tw-outline-style: none;
    outline-style: none;
  }

  .active\:border-forgeblue-500:active {
    border-color: var(--color-forgeblue-500);
  }

  .active\:bg-forgeblue-300:active {
    background-color: var(--color-forgeblue-300);
  }

  .active\:bg-forgeblue-500:active {
    background-color: var(--color-forgeblue-500);
  }

  .active\:bg-forgeblue-600:active {
    background-color: var(--color-forgeblue-600);
  }

  .active\:bg-forgegray-300:active {
    background-color: var(--color-forgegray-300);
  }

  .active\:text-forgeblue-100:active {
    color: var(--color-forgeblue-100);
  }

  .active\:text-forgegray-200:active {
    color: var(--color-forgegray-200);
  }

  @media (min-width: 40rem) {
    .sm\:flex-row {
      flex-direction: row;
    }
  }

  @container (min-width: 28rem) {
    .\@md\:shrink-1 {
      flex-shrink: 1;
    }
  }

  @media print {
    .print\:relative {
      position: relative;
    }

    .print\:hidden {
      display: none;
    }

    .print\:h-auto {
      height: auto;
    }

    .print\:w-auto {
      width: auto;
    }

    .print\:flex-auto {
      flex: auto;
    }

    .print\:basis-0 {
      flex-basis: calc(var(--spacing) * 0);
    }

    .print\:basis-full {
      flex-basis: 100%;
    }

    .print\:overflow-visible {
      overflow: visible;
    }

    .print\:bg-white {
      background-color: var(--color-white);
    }
  }
}

.scrollbox:has(.scrollable) {
  overflow: hidden;
}

.markdown {
  margin: calc(var(--spacing) * 4);
  background-color: var(--color-white);
  padding: calc(var(--spacing) * 8);
  font-size: var(--text-sm);
  line-height: var(--tw-leading, var(--text-sm--line-height));
}

.markdown h2, h3, h4, h5, h6 {
  margin-bottom: calc(var(--spacing) * 6);
  padding-top: calc(var(--spacing) * 2);
  --tw-font-weight: var(--font-weight-bold);
  font-weight: var(--font-weight-bold);
  color: var(--color-forgeblue-950);
}

.markdown > h1:first-child {
  font-size: var(--text-5xl);
  line-height: var(--tw-leading, var(--text-5xl--line-height));
  --tw-font-weight: var(--font-weight-bold);
  font-weight: var(--font-weight-bold);
  color: var(--color-forgeblue-950);
}

@media (min-width: 48rem) {
  .markdown > h1:first-child {
    font-size: var(--text-6xl);
    line-height: var(--tw-leading, var(--text-6xl--line-height));
  }
}

@media (min-width: 64rem) {
  .markdown > h1:first-child {
    font-size: var(--text-7xl);
    line-height: var(--tw-leading, var(--text-7xl--line-height));
  }
}

@media (min-width: 96rem) {
  .markdown > h1:first-child {
    font-size: var(--text-8xl);
    line-height: var(--tw-leading, var(--text-8xl--line-height));
  }
}

.markdown > h1:first-child:has( + h1) {
  display: inline-block;
}

.markdown > h1:first-child + h1 {
  padding-top: calc(var(--spacing) * 0);
  font-size: var(--text-4xl);
  line-height: var(--tw-leading, var(--text-4xl--line-height));
  --tw-font-weight: var(--font-weight-bold);
  font-weight: var(--font-weight-bold);
  color: var(--color-forgegray-700);
  display: inline-block;
}

.markdown h1 {
  margin-bottom: calc(var(--spacing) * 9);
  padding-top: calc(var(--spacing) * 1);
  font-size: var(--text-4xl);
  line-height: var(--tw-leading, var(--text-4xl--line-height));
  --tw-font-weight: var(--font-weight-bold);
  font-weight: var(--font-weight-bold);
}

.markdown h2 {
  font-size: var(--text-3xl);
  line-height: var(--tw-leading, var(--text-3xl--line-height));
  --tw-font-weight: var(--font-weight-bold);
  font-weight: var(--font-weight-bold);
}

.markdown h3 {
  font-size: var(--text-2xl);
  line-height: var(--tw-leading, var(--text-2xl--line-height));
  --tw-font-weight: var(--font-weight-bold);
  font-weight: var(--font-weight-bold);
}

.markdown h4 {
  font-size: var(--text-xl);
  line-height: var(--tw-leading, var(--text-xl--line-height));
  --tw-font-weight: var(--font-weight-bold);
  font-weight: var(--font-weight-bold);
}

.markdown h5 {
  font-size: var(--text-lg);
  line-height: var(--tw-leading, var(--text-lg--line-height));
  --tw-font-weight: var(--font-weight-bold);
  font-weight: var(--font-weight-bold);
}

.markdown h6 {
  font-size: var(--text-sm);
  line-height: var(--tw-leading, var(--text-sm--line-height));
  --tw-font-weight: var(--font-weight-bold);
  font-weight: var(--font-weight-bold);
}

.markdown p {
  margin-bottom: calc(var(--spacing) * 6);
  font-size: var(--text-sm);
  line-height: var(--tw-leading, var(--text-sm--line-height));
  --tw-font-weight: var(--font-weight-normal);
  font-weight: var(--font-weight-normal);
}

.markdown p code {
  margin-bottom: calc(var(--spacing) * 6);
  background-color: var(--color-forgeblue-50);
  font-family: var(--font-mono);
  font-size: var(--text-sm);
  line-height: var(--tw-leading, var(--text-sm--line-height));
  --tw-font-weight: var(--font-weight-normal);
  font-weight: var(--font-weight-normal);
}

.markdown blockquote {
  margin-bottom: calc(var(--spacing) * 6);
  border-left-style: var(--tw-border-style);
  --tw-border-style: solid;
  border-style: solid;
  border-left-width: 3px;
  border-left-color: var(--color-forgeblue-800);
  background-color: var(--color-forgegray-100);
  padding-top: calc(var(--spacing) * 3);
  padding-right: calc(var(--spacing) * 10);
  padding-bottom: calc(var(--spacing) * 3);
  padding-left: calc(var(--spacing) * 10);
}

.markdown blockquote:is(.markdown-alert-note, .markdown-alert-tip, .markdown-alert-important, .markdown-alert-warning, .markdown-alert-caution) {
  border-left-style: var(--tw-border-style);
  --tw-border-style: solid;
  border-style: solid;
  border-left-width: 3px;
  border-left-color: var(--forge-markdown-admonish-color);
}

.markdown blockquote:is(.markdown-alert-note, .markdown-alert-tip, .markdown-alert-important, .markdown-alert-warning, .markdown-alert-caution):not(:has( > :is(h1, h2, h3, h4, h5, h6):first-child)):before {
  margin-top: calc(var(--spacing) * 2);
  margin-bottom: calc(var(--spacing) * 3);
  --tw-font-weight: var(--font-weight-bold);
  font-weight: var(--font-weight-bold);
  color: var(--forge-markdown-admonish-color);
  content: var(--forge-markdown-admonish-content-full);
  display: block;
}

.markdown blockquote:is(.markdown-alert-note, .markdown-alert-tip, .markdown-alert-important, .markdown-alert-warning, .markdown-alert-caution) > :is(h1, h2, h3, h4, h5, h6):first-child {
  color: var(--forge-markdown-admonish-color);
  display: inline-block;
}

.markdown blockquote:is(.markdown-alert-note, .markdown-alert-tip, .markdown-alert-important, .markdown-alert-warning, .markdown-alert-caution) > :is(h1, h2, h3, h4, h5, h6):first-child:before {
  margin-right: calc(var(--spacing) * 4);
  content: var(--forge-markdown-admonish-content-icon);
  display: inline-block;
}

.markdown blockquote.markdown-alert-note {
  --forge-markdown-admonish-content-full: "ℹ️ Note!";
  --forge-markdown-admonish-content-icon: "ℹ️";
  --forge-markdown-admonish-color: var(--color-forgeblue-700);
}

.markdown blockquote.markdown-alert-tip {
  --forge-markdown-admonish-content-full: "💡 Tip!";
  --forge-markdown-admonish-content-icon: "💡";
  --forge-markdown-admonish-color: var(--color-green-700);
}

.markdown blockquote.markdown-alert-important {
  --forge-markdown-admonish-content-full: "❕ IMPORTANT!";
  --forge-markdown-admonish-content-icon: "❕";
  --forge-markdown-admonish-color: var(--color-purple-700);
}

.markdown blockquote.markdown-alert-warning {
  --forge-markdown-admonish-content-full: "⚠️ WARNING!";
  --forge-markdown-admonish-content-icon: "⚠️";
  --forge-markdown-admonish-color: var(--color-orange-500);
}

.markdown blockquote.markdown-alert-caution {
  --forge-markdown-admonish-content-full: "🛑͏ CAUTION!";
  --forge-markdown-admonish-content-icon: "🛑͏";
  --forge-markdown-admonish-color: var(--color-red-500);
}

.markdown a {
  color: var(--color-forgeblue-700);
  text-decoration-line: none;
}

.markdown a:hover {
  color: var(--color-forgeblue-500);
  text-decoration-line: underline;
}

.markdown a:active {
  color: var(--color-forgeblue-400);
  text-decoration-line: underline;
}

.markdown a:visited {
  color: var(--color-forgebrown-800);
}

.markdown ul {
  list-style-type: disc;
}

.markdown ol {
  list-style-type: decimal;
}

.markdown :is(ul, ol) {
  margin-bottom: calc(var(--spacing) * 6);
  margin-left: calc(var(--spacing) * 5);
}

.markdown pre {
  margin-bottom: calc(var(--spacing) * 6);
  border-radius: var(--radius-xs);
  border-style: var(--tw-border-style);
  --tw-border-style: dashed;
  padding-left: calc(var(--spacing) * 1);
  border-style: dashed;
  border-width: 1px;
  overflow-x: auto;
}

.markdown table {
  margin-bottom: calc(var(--spacing) * 6);
  table-layout: auto;
}

.markdown table > thead > tr {
  --tw-border-style: solid;
  border-style: solid;
  border-color: var(--color-forgeblue-700);
}

.markdown table > thead > tr > th {
  border-left-style: var(--tw-border-style);
  --tw-border-style: solid;
  border-style: solid;
  border-left-width: 1px;
  border-color: var(--color-forgeblue-500);
  background-color: var(--color-forgegray-300);
  padding-inline: calc(var(--spacing) * 2);
  padding-block: calc(var(--spacing) * 2);
}

.markdown table > thead > tr > th:first-child {
  --tw-border-style: none;
  border-style: none;
}

.markdown table > tbody > tr {
  border-top-style: var(--tw-border-style);
  --tw-border-style: solid;
  border-style: solid;
  border-top-width: 1px;
  border-color: var(--color-forgeblue-500);
}

.markdown table > tbody > tr:nth-child(2n) {
  background-color: var(--color-forgegray-200);
}

.markdown table > tbody > tr > td {
  border-left-style: var(--tw-border-style);
  --tw-border-style: solid;
  border-style: solid;
  border-left-width: 1px;
  border-color: var(--color-forgeblue-500);
  padding-inline: calc(var(--spacing) * 2);
  padding-block: calc(var(--spacing) * 2);
}

.markdown table > tbody > tr > td:first-child {
  --tw-border-style: none;
  border-style: none;
}

.markdown kbd {
  --kbd-color-background: var(--color-white);
  --kbd-color-border: var(--color-gray-800);
  --kbd-color-text: var(--color-gray-800);
  background-color: var(--kbd-color-background);
  color: var(--kbd-color-text);
  border: 1px solid var(--kbd-color-border);
  box-shadow: 0 2px 0 1px var(--kbd-color-border);
  cursor: default;
  font-family: var(--font-family-sans-serif);
  font-size: var(--text-xs);
  line-height: var(--tw-leading, var(--text-xs--line-height));
  text-align: center;
  border-radius: .25rem;
  min-width: .75rem;
  padding: 2px 5px;
  line-height: 1;
  display: inline-block;
  position: relative;
  top: -1px;
}

.markdown kbd:hover {
  box-shadow: 0 1px 0 .5px var(--kbd-color-border);
  top: 1px;
}

@property --tw-rotate-x {
  syntax: "*";
  inherits: false
}

@property --tw-rotate-y {
  syntax: "*";
  inherits: false
}

@property --tw-rotate-z {
  syntax: "*";
  inherits: false
}

@property --tw-skew-x {
  syntax: "*";
  inherits: false
}

@property --tw-skew-y {
  syntax: "*";
  inherits: false
}

@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}

@property --tw-leading {
  syntax: "*";
  inherits: false
}

@property --tw-font-weight {
  syntax: "*";
  inherits: false
}

@property --tw-ordinal {
  syntax: "*";
  inherits: false
}

@property --tw-slashed-zero {
  syntax: "*";
  inherits: false
}

@property --tw-numeric-figure {
  syntax: "*";
  inherits: false
}

@property --tw-numeric-spacing {
  syntax: "*";
  inherits: false
}

@property --tw-numeric-fraction {
  syntax: "*";
  inherits: false
}

@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-ring-color {
  syntax: "*";
  inherits: false
}

@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false
}

@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-ring-inset {
  syntax: "*";
  inherits: false
}

@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0;
}

@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}

@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-duration {
  syntax: "*";
  inherits: false
}

@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@keyframes background-slide-left {
  0% {
    background-position: 0;
  }

  100% {
    background-position: 100%;
  }
}

@keyframes background-slide-right {
  0% {
    background-position: 100%;
  }

  100% {
    background-position: 0;
  }
}
